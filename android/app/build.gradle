def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
//在android这级的根目录下： FlutterProjects\TinnitusQuiz\android\local.properties
// sdk.dir=D:\\SDK
// flutter.sdk=D:\\Softwares\\FLUTTER\\flutter
// flutter.buildMode=debug
// flutter.versionName=2.0.0
// flutter.versionCode=2
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
//flutter的根目录D:\\Softwares\\FLUTTER\\flutter


def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

// 打印配置 打印 gradle 配置 maogecomm 
// println "gradle.gradleVersion: $gradle.gradleVersion"
// println "android.buildToolsVersion: $android.buildToolsVersion"
// println "flutter.compileSdkVersion: $flutter.compileSdkVersion"
// println "flutter.targetSdkVersion: $flutter.targetSdkVersion"
// println "flutter.minSdkVersion: $flutter.minSdkVersion"
// println "flutter.ndkVersion: $flutter.ndkVersion"
    // 对应参数:
    // gradle.gradleVersion: 7.4// Gradle版本号
    // android.buildToolsVersion: 30.0.3
    // flutter.compileSdkVersion: 31//Android SDK编译版本号，指定项目编译时所使用的Android SDK版本。
    // flutter.targetSdkVersion: 31
    // flutter.minSdkVersion: 16
    // flutter.ndkVersion: 21.1.6352462

android {
    // compileSdkVersion flutter.compileSdkVersion //31
    compileSdkVersion 33
    ndkVersion flutter.ndkVersion//
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

//包名，打包后需要修改两处
//applicationId：是打包时的应用标识，可以根据自己公司的要求来改
    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId  "com.example.TinnQuizQEHS"//需要跟包名修改同步【位置1/2】

        // You can update the following values to match your application needs.
        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-build-configuration.
        // minSdkVersion flutter.minSdkVersion
        // minSdkVersion 24 实际上16
        minSdkVersion 19
        targetSdkVersion flutter.targetSdkVersion //目前31
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        multiDexEnabled true//方法数超过了64k限制，因此需要启用Multidex支持
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.debug
        }
    }
//    deleteApkOnInstall true //刚加的

    namespace 'com.example.TinnQuizQEHS'//需要跟包名修改同步【位置2/2】

}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'com.android.support:multidex:1.0.3'
}
