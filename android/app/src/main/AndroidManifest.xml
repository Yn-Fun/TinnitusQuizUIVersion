<manifest xmlns:android="http://schemas.android.com/apk/res/android">

   <!-- package="com.example.TinnQuizQEHS"
   android:versionCode="13"
   android:versionName="2.3.3" -->

<!-- 要访问SD卡，首先设置读取权限 -->
<uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />
<!-- 允许应用程序请求删除安装包 -->
<uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
    <!-- 均衡 -->
<uses-permission android:name="android.permission.MODIFY_AUDIO_SETTINGS" />
<uses-permission android:name="android.permission.INTERNET"/>

<!--    xmlns:tools="http://schemas.android.com/tools"-->

<!-- 为了访问这些目录，你需要在应用程序中申请特殊权限， -->
<uses-permission android:name="android.permission.MANAGE_EXTERNAL_STORAGE" />

<!-- flutter_sound请求的 其实不一定需要 -->
<uses-permission android:name="android.permission.RECORD_AUDIO" />
<!--<uses-permission android:name="android.permission.DELETE_PACKAGES"/>-->
<!-- 唤醒锁定权限 -->
<uses-permission android:name="android.permission.WAKE_LOCK" />
    
<!-- 除了上面的permission，下面这条 是对于Android10及以上的设备 访问权限必须的！ android:requestLegacyExternalStorage="true" -->
    <application
        android:requestLegacyExternalStorage="true" 
        android:label="耳鸣主观量表App"
        android:icon="@mipmap/ic_launcher_qehsnew">
<!--        android:name="${applicationName}">-->
<!--        android:deleteApkOnInstall="trueapplicationName">   &lt;!&ndash;这行刚加的&ndash;&gt;-->
        <activity
            android:name="com.example.TinnQuizQEHS.MainActivity"
            android:exported="true"
            android:launchMode="singleTop"
            android:theme="@style/LaunchTheme"
            android:configChanges="orientation|keyboardHidden|keyboard|screenSize|smallestScreenSize|locale|layoutDirection|fontScale|screenLayout|density|uiMode"
            android:hardwareAccelerated="true"
            android:windowSoftInputMode="adjustResize">
            <!-- Specifies an Android theme to apply to this Activity as soon as
                 the Android process has started. This theme is visible to the user
                 while the Flutter UI initializes. After that, this theme continues
                 to determine the Window background behind the Flutter UI. -->
            <meta-data
              android:name="io.flutter.embedding.android.NormalTheme"
              android:resource="@style/NormalTheme"
              />
            <intent-filter>
                <action android:name="android.intent.action.MAIN"/>
                <category android:name="android.intent.category.LAUNCHER"/>
            </intent-filter>
        </activity>
        <!-- Don't delete the meta-data below.
             This is used by the Flutter tool to generate GeneratedPluginRegistrant.java -->
        <meta-data
            android:name="flutterEmbedding"
            android:value="2" />
    </application>
</manifest>
